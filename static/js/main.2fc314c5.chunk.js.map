{"version":3,"sources":["App.js","index.js"],"names":["App","useState","x","setX","y","setY","canvasRef","useRef","useEffect","context","current","getContext","canvas","height","window","innerHeight","width","innerWidth","clearRect","fillRect","className","ref","onClick","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAGe,SAASA,IAEtB,MAAkBC,mBAAS,GAA3B,mBAAOC,EAAP,KAAUC,EAAV,KACA,EAAkBF,mBAAS,GAA3B,mBAAOG,EAAP,KAAUC,EAAV,KAEMC,EAAYC,iBAAO,MAiBzB,OAdAC,qBAAU,WACR,IAAMC,EAAUH,EAAUI,QAAQC,WAAW,MAC7CF,EAAQG,OAAOC,OAASC,OAAOC,YAC/BN,EAAQG,OAAOI,MAAQF,OAAOG,aAC9B,IAGFT,qBAAU,WACR,IAAMC,EAAUH,EAAUI,QAAQC,WAAW,MAC7CF,EAAQS,UAAU,EAAG,EAAGJ,OAAOC,YAAaD,OAAOG,YACnDR,EAAQU,SAASjB,EAAGE,EAAG,IAAK,OAC5B,CAACF,EAAEE,IAIH,sBAAKgB,UAAU,MAAf,UACE,wBAAQC,IAAKf,IAEb,sBAAKc,UAAU,SAAf,UACE,wBAAQE,QAAS,kBAAMjB,GAAK,SAACD,GAAD,OAASA,EAAI,EAAIA,EAAI,GAAK,MAAtD,gBACA,wBAAQkB,QAAS,kBAAMnB,GAAK,SAACD,GAAD,OAAOA,EAAI,OAAvC,kBACA,wBAAQoB,QAAS,kBAAMjB,GAAK,SAACD,GAAD,OAAOA,EAAI,OAAvC,kBACA,wBAAQkB,QAAS,kBAAMnB,GAAK,SAACD,GAAD,OAAOA,EAAI,OAAvC,sBAGF,sBAAKkB,UAAU,SAAf,UACE,qBAAKG,IAAI,kCAAkCC,IAAI,SAC/C,qBAAKD,IAAI,kCAAkCC,IAAI,UAC/C,qBAAKD,IAAI,kCAAkCC,IAAI,OAC/C,qBAAKD,IAAI,kCAAkCC,IAAI,eCnCvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.2fc314c5.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport './App.css';\n\nexport default function App() {\n\n  const [x, setX] = useState(0)\n  const [y, setY] = useState(0)\n  \n  const canvasRef = useRef(null)\n\n // set the height and width of canvas \n  useEffect(() => {\n    const context = canvasRef.current.getContext('2d');\n    context.canvas.height = window.innerHeight;\n    context.canvas.width = window.innerWidth;\n  },[])\n\n  // move the box if x or y changes\n  useEffect(() => {\n    const context = canvasRef.current.getContext('2d');\n    context.clearRect(0, 0, window.innerHeight, window.innerWidth)\n    context.fillRect(x, y, 100, 100)\n  },[x,y])\n\n\n  return (\n    <div className=\"app\">\n      <canvas ref={canvasRef}/>\n\n      <div className=\"arrows\">\n        <button onClick={() => setY((y) => ( y > 0 ? y - 20 : 0))}>Up</button>\n        <button onClick={() => setX((x) => x - 20)}>Left</button>\n        <button onClick={() => setY((y) => y + 20)}>Down</button>\n        <button onClick={() => setX((x) => x + 20)}>Right</button>\n      </div>\n\n      <div className=\"images\">\n        <img src=\"https://i.imgur.com/JYUB0m3.png\" alt=\"Down\" />\n        <img src=\"https://i.imgur.com/GEXD7bk.gif\" alt=\"Right\" />\n        <img src=\"https://i.imgur.com/XSA2Oom.gif\" alt=\"Up\" />\n        <img src=\"https://i.imgur.com/4LGAZ8t.gif\" alt=\"Left\" />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}