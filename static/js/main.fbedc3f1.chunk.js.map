{"version":3,"sources":["App.js","useMovement.js","index.js"],"names":["App","useState","x","setX","y","setY","direction","setDirection","move","dir","useEffect","handleKeyDown","e","key","window","addEventListener","removeEventListener","useMovement","canvasRef","useRef","linkDownRef","linkUpRef","linkRightRef","linkLeftRef","context","current","getContext","canvas","height","innerHeight","width","innerWidth","theLinkRef","clearRect","drawImage","className","ref","onClick","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAIe,SAASA,IACtB,MCHyB,WACvB,MAAkBC,mBAAS,GAA3B,mBAAOC,EAAP,KAAUC,EAAV,KACA,EAAkBF,mBAAS,GAA3B,mBAAOG,EAAP,KAAUC,EAAV,KACA,EAAkCJ,mBAAS,SAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAgBA,SAASC,EAAKC,GACVF,EAAaE,GACD,OAARA,GAAcJ,GAAK,SAACD,GAAD,OAAOA,EAAI,MACtB,SAARK,GAAgBN,GAAK,SAACD,GAAD,OAAOA,EAAI,MACxB,SAARO,GAAgBJ,GAAK,SAACD,GAAD,OAAOA,EAAI,MACxB,UAARK,GAAiBN,GAAK,SAACD,GAAD,OAAOA,EAAI,MAGzC,OApBFQ,qBAAU,WAER,SAASC,EAAcC,GACP,YAAVA,EAAEC,KAAmBL,EAAK,MAChB,cAAVI,EAAEC,KAAqBL,EAAK,QAClB,cAAVI,EAAEC,KAAqBL,EAAK,QAClB,eAAVI,EAAEC,KAAsBL,EAAK,SAGnC,OARAM,OAAOC,iBAAiB,UAAWJ,GAQ5B,kBAAMG,OAAOE,oBAAoB,UAAWL,MAClD,IAUM,CAACT,EAAGE,EAAGI,EAAMF,GDxBUW,GAAhC,mBAAOf,EAAP,KAAUE,EAAV,KAAaI,EAAb,KAAmBF,EAAnB,KACMY,EAAYC,iBAAO,MACnBC,EAAcD,iBAAO,MACrBE,EAAYF,iBAAO,MACnBG,EAAeH,iBAAO,MACtBI,EAAcJ,iBAAO,MAwB3B,OApBAT,qBAAU,WACR,IAAMc,EAAUN,EAAUO,QAAQC,WAAW,MAC7CF,EAAQG,OAAOC,OAASd,OAAOe,YAC/BL,EAAQG,OAAOG,MAAQhB,OAAOiB,aAC7B,IAGHrB,qBAAU,WACR,IAGIsB,EAHER,EAAUN,EAAUO,QAAQC,WAAW,MAC7CF,EAAQS,UAAU,EAAG,EAAGnB,OAAOe,YAAaf,OAAOiB,YAGjC,SAAdzB,IAAsB0B,EAAaZ,GACrB,OAAdd,IAAoB0B,EAAaX,GACnB,UAAdf,IAAuB0B,EAAaV,GACtB,SAAdhB,IAAsB0B,EAAaT,GAEvCC,EAAQU,UAAUF,EAAWP,QAASvB,EAAGE,KACxC,CAACF,EAAGE,EAAGE,IAGR,sBAAK6B,UAAU,MAAf,UACE,wBAAQC,IAAKlB,IAEb,sBAAKiB,UAAU,SAAf,UACE,wBAAQE,QAAS,kBAAM7B,EAAK,OAA5B,gBACA,wBAAQ6B,QAAS,kBAAM7B,EAAK,SAA5B,kBACA,wBAAQ6B,QAAS,kBAAM7B,EAAK,SAA5B,kBACA,wBAAQ6B,QAAS,kBAAM7B,EAAK,UAA5B,sBAGF,sBAAK2B,UAAU,SAAf,UACE,qBACEG,IAAI,kCACJC,IAAI,OACJH,IAAKhB,IAEP,qBACEkB,IAAI,kCACJC,IAAI,QACJH,IAAKd,IAEP,qBAAKgB,IAAI,kCAAkCC,IAAI,KAAKH,IAAKf,IACzD,qBACEiB,IAAI,kCACJC,IAAI,OACJH,IAAKb,UEvDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.fbedc3f1.chunk.js","sourcesContent":["import React, { useEffect, useRef} from \"react\";\nimport \"./App.css\";\nimport { useMovement } from \"./useMovement\";\n\nexport default function App() {\n  const [x, y, move, direction] = useMovement()\n  const canvasRef = useRef(null);\n  const linkDownRef = useRef(null);\n  const linkUpRef = useRef(null);\n  const linkRightRef = useRef(null);\n  const linkLeftRef = useRef(null);\n\n\n  // set the height and width of canvas\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.canvas.height = window.innerHeight;\n    context.canvas.width = window.innerWidth;\n  }, []);\n\n  // move the box if x or y changes\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, window.innerHeight, window.innerWidth);\n\n    let theLinkRef;\n    if (direction === \"down\") theLinkRef = linkDownRef;\n    if (direction === \"up\") theLinkRef = linkUpRef;\n    if (direction === \"right\") theLinkRef = linkRightRef;\n    if (direction === \"left\") theLinkRef = linkLeftRef;\n\n    context.drawImage(theLinkRef.current, x, y);\n  }, [x, y, direction]);\n\n  return (\n    <div className=\"app\">\n      <canvas ref={canvasRef} />\n\n      <div className=\"arrows\">\n        <button onClick={() => move(\"up\")}>Up</button>\n        <button onClick={() => move(\"left\")}>Left</button>\n        <button onClick={() => move(\"down\")}>Down</button>\n        <button onClick={() => move(\"right\")}>Right</button>\n      </div>\n\n      <div className=\"images\">\n        <img\n          src=\"https://i.imgur.com/JYUB0m3.png\"\n          alt=\"Down\"\n          ref={linkDownRef}\n        />\n        <img\n          src=\"https://i.imgur.com/GEXD7bk.gif\"\n          alt=\"Right\"\n          ref={linkRightRef}\n        />\n        <img src=\"https://i.imgur.com/XSA2Oom.gif\" alt=\"Up\" ref={linkUpRef} />\n        <img\n          src=\"https://i.imgur.com/4LGAZ8t.gif\"\n          alt=\"Left\"\n          ref={linkLeftRef}\n        />\n      </div>\n    </div>\n  );\n}\n","import {useState, useEffect} from 'react';\r\n\r\nexport const useMovement = () => {\r\n    const [x, setX] = useState(0);\r\n    const [y, setY] = useState(0);\r\n    const [direction, setDirection] = useState(\"right\");\r\n\r\n\r\n    // add event listener to window to listen for arrow keys\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    function handleKeyDown(e) {\r\n      if (e.key === \"ArrowUp\") move(\"up\");\r\n      if (e.key === \"ArrowLeft\") move(\"left\");\r\n      if (e.key === \"ArrowDown\") move(\"down\");\r\n      if (e.key === \"ArrowRight\") move(\"right\");\r\n    }\r\n\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, []);\r\n\r\n    function move(dir) {\r\n        setDirection(dir);\r\n        if (dir === \"up\") setY((y) => y - 20);\r\n        if (dir === \"left\") setX((x) => x - 20);\r\n        if (dir === \"down\") setY((y) => y + 20);\r\n        if (dir === \"right\") setX((x) => x + 20);\r\n      }\r\n    \r\n    return [x, y, move, direction]\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}